module layer_TB();

reg clk, reset;
reg [32*100-1:0] input_fc;
wire [32*32-1:0] weights;
wire [32*32-1:0] output_fc;

reg [7:0] address;

localparam PERIOD = 100;

always
	#(PERIOD/2) clk = ~clk;

always @ (posedge clk or posedge reset) begin
	if (reset == 1'b1) begin
		address = 0;
	end else begin
		address = address + 1;
	end
end

weightMemory WM 
(
	.clk(clk),
	.address(address),
	.weights(weights)
);

initial begin
	#0
	clk = 1'b0;
	reset = 1'b1;
	input_fc = 3200'b

	#PERIOD
	reset = 1'b0;
	

	#(102*PERIOD)
	$stop;
end

layer UUT
(
	.clk(clk),
	.reset(reset),
	.input_fc(input_fc),
	.weights(weights),
	.output_fc(output_fc)
);

endmodule
